#!/bin/bash

# DoneDep Cleaner Script
# Remove todas as depend√™ncias extra√≠das e arquivos relacionados

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para exibir banner
show_banner() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                               DoneDep Cleaner                                 ‚ïë"
    echo "‚ïë                    Remove todas as depend√™ncias extra√≠das                     ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# Fun√ß√£o para confirmar a√ß√£o
confirm_action() {
    echo -e "${YELLOW}‚ö†Ô∏è  Esta a√ß√£o ir√° remover TODOS os dados de depend√™ncias extra√≠das!${NC}"
    echo -e "${YELLOW}   Os seguintes arquivos e dados ser√£o removidos:${NC}"
    echo -e "${YELLOW}   ‚Ä¢ data/dependencies.json${NC}"
    echo -e "${YELLOW}   ‚Ä¢ data/dependency-files-list.json${NC}"
    echo -e "${YELLOW}   ‚Ä¢ data/dependencies_*.json (arquivos de hist√≥rico)${NC}"
    echo -e "${YELLOW}   ‚Ä¢ data/donedep.log${NC}"
    echo ""
    read -p "Deseja continuar? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${RED}‚ùå Opera√ß√£o cancelada pelo usu√°rio${NC}"
        exit 1
    fi
}

# Fun√ß√£o para remover arquivo se existir
remove_file() {
    local file="$1"
    if [[ -f "$file" ]]; then
        rm -f "$file"
        echo -e "${GREEN}‚úÖ Removido: $file${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Arquivo n√£o encontrado: $file${NC}"
    fi
}

# Fun√ß√£o para remover arquivos com padr√£o
remove_pattern() {
    local pattern="$1"
    local description="$2"
    local search_dir="${3:-.}"  # Usa diret√≥rio atual como padr√£o se n√£o especificado
    local count=$(find "$search_dir" -name "$pattern" -type f 2>/dev/null | wc -l)
    
    if [[ $count -gt 0 ]]; then
        find "$search_dir" -name "$pattern" -type f -delete
        echo -e "${GREEN}‚úÖ Removidos $count arquivo(s): $description${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Nenhum arquivo encontrado: $description${NC}"
    fi
}

# Fun√ß√£o principal de limpeza
clean_dependencies() {
    echo -e "${BLUE}üßπ Iniciando limpeza das depend√™ncias...${NC}"
    echo ""
    
    # Navegar para o diret√≥rio do projeto
    cd "$(dirname "$0")"
    
    # Remover arquivos principais
    echo -e "${BLUE}üìÑ Removendo arquivos principais...${NC}"
    remove_file "data/dependencies.json"
    remove_file "data/dependency-files-list.json"
    remove_file "data/donedep.log"
    
    echo ""
    
    # Remover arquivos de hist√≥rico
    echo -e "${BLUE}üìÖ Removendo arquivos de hist√≥rico...${NC}"
    remove_pattern "dependencies_*.json" "arquivos de hist√≥rico de depend√™ncias" "data"
    
    echo ""
    
    # Verificar se o diret√≥rio data ainda tem conte√∫do (exceto repo_cache)
    local remaining_files=$(find data/ -type f ! -path "data/repo_cache/*" 2>/dev/null | wc -l)
    
    if [[ $remaining_files -eq 0 ]]; then
        echo -e "${GREEN}‚ú® Limpeza conclu√≠da! Todos os dados de depend√™ncias foram removidos.${NC}"
    else
        echo -e "${YELLOW}‚ÑπÔ∏è  Limpeza conclu√≠da. Alguns arquivos ainda permanecem no diret√≥rio data/.${NC}"
    fi
    
    echo ""
    echo -e "${BLUE}üìä Status final:${NC}"
    echo -e "${BLUE}   ‚Ä¢ Cache de reposit√≥rios: ${GREEN}mantido${NC}"
    echo -e "${BLUE}   ‚Ä¢ Dados de depend√™ncias: ${RED}removidos${NC}"
    echo -e "${BLUE}   ‚Ä¢ Logs: ${RED}removidos${NC}"
    echo ""
    echo -e "${GREEN}üéâ Para extrair novas depend√™ncias, execute: ${YELLOW}./run.sh${NC}"
}

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "DoneDep Cleaner - Remove todas as depend√™ncias extra√≠das"
    echo ""
    echo "Uso:"
    echo "  ./cleaner.sh [OP√á√ÉO]"
    echo ""
    echo "Op√ß√µes:"
    echo "  -h, --help     Mostra esta ajuda"
    echo "  -f, --force    Remove arquivos sem confirma√ß√£o"
    echo "  -v, --version  Mostra a vers√£o"
    echo ""
    echo "Exemplos:"
    echo "  ./cleaner.sh           # Limpeza interativa com confirma√ß√£o"
    echo "  ./cleaner.sh --force   # Limpeza autom√°tica sem confirma√ß√£o"
}

# Fun√ß√£o para mostrar vers√£o
show_version() {
    echo "DoneDep Cleaner v1.0.0"
}

# Processamento de argumentos
FORCE_MODE=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -f|--force)
            FORCE_MODE=true
            shift
            ;;
        -v|--version)
            show_version
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Op√ß√£o desconhecida: $1${NC}"
            echo -e "${YELLOW}Use --help para ver as op√ß√µes dispon√≠veis${NC}"
            exit 1
            ;;
    esac
done

# Execu√ß√£o principal
show_banner

if [[ "$FORCE_MODE" == false ]]; then
    confirm_action
fi

clean_dependencies

echo -e "${GREEN}‚ú® Opera√ß√£o conclu√≠da com sucesso!${NC}"
